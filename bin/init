#!/bin/bash

set -eo pipefail

export PATH=/bin:/sbin:/usr/bin/:/usr/sbin
umask 027

SQUID_CONF=/etc/squid/squid.conf
SQUID_PID_PATH='/var/run/squid/squid.pid'
ALLOW=/etc/squid/allow-domains/list.txt
DENY=/etc/squid/deny-domains/list.txt

# overwrite list.txt if $SQUID_ALLOW has content
if test -n "$SQUID_ALLOW"; then 
  echo "$SQUID_ALLOW" > "$ALLOW"
fi

# overwrite list.txt if $SQUID_DENY has content
if test -n "$SQUID_DENY"; then 
  echo "$SQUID_DENY" > "$DENY"
fi

# squid doesn't support providing cache_mgr from a separate file
perl -pi -e 's/\$SQUID_CACHE_MGR_MAIL/$ENV{SQUID_CACHE_MGR_MAIL}/' $SQUID_CONF

# specify allow and denys' ports
perl -pi -e 's/\$PORTS/$ENV{SQUID_PORTS}/' $SQUID_CONF

# disable access log
if test "$SQUID_ACCESS_LOG" == "false"; then 
  perl -pi -e 's/\$ACCESS_LOG/none/' $SQUID_CONF
else
  perl -pi -e 's#\$ACCESS_LOG#tcp://127.0.0.1:1337#' $SQUID_CONF
  
  # squid can't log to stdout, but it can log to tcp, and nc tcp server will print to stdout
  nc -4 -t -l 1337 -k &
  NC_PID=$!
fi

# execute squid in background
squid -f $SQUID_CONF -d$SQUID_DEBUG

SQUID_PID=$(until test -f "$SQUID_PID_PATH"; do sleep 1; done; cat "$SQUID_PID_PATH")

# reload squid if list changes
sh -c "while inotifywait -s --timefmt '%s' --format '%T' -e CLOSE_WRITE -e DELETE_SELF '$ALLOW' '$DENY'; do sleep 5; kill -HUP $SQUID_PID; done" &
INOTIFY_PID=$!

# if either squid, nc or the inotifywait process dies, kill container (by doing nothing)
while test -e /proc/$SQUID_PID -a -e /proc/$NC_PID -a -e /proc/$INOTIFY_PID ; do sleep 5; done
